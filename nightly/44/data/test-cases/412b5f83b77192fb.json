{"uid":"412b5f83b77192fb","name":"RED-BLACK.03","historyId":"RED-BLACK-LAMBDA:RED-BLACK-LAMBDA#RED-BLACK.03","time":{"start":1725589042000,"stop":1725589042001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.org/public/metta/./reports/BY_DATE/2024-09-06T01:48:49/tests/extended_compat/metta-examples/red-black-lambda/red-black.metta.html#RED-BLACK-LAMBDA.RED-BLACK.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (objectify (RedLambda String BTheory)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((RC (: equivalent (-> Term (-> Term Bool)))) (RC (: Abstraction (-> BTheory (-> Term Term)))) (RC (= ((equivalent $_5130) $_5148) ???)) (RC (: reduce (-> Term (Option Term)))) (RC (: Application (-> ...","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((RC (: Term Type)) (RC (: Ground (-> String Term))) (RC (: Mention (-> BTheory Term))) (RC (: Abstraction (-> BTheory (-> Term Term)))) (RC (: Application (-> Term (-> Term Term)))) (RC (: equivalent...","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"RED-BLACK-LAMBDA"},{"name":"testClass","value":"RED-BLACK-LAMBDA"},{"name":"package","value":"RED-BLACK-LAMBDA"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"51b3245db5818020","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/43//#testresult/51b3245db5818020","status":"passed","time":{"start":1725502664000,"stop":1725502664001,"duration":1}},{"uid":"57cb5b0fd880453b","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/42//#testresult/57cb5b0fd880453b","status":"passed","time":{"start":1725416253000,"stop":1725416253001,"duration":1}},{"uid":"96ed869f820fdd46","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/41//#testresult/96ed869f820fdd46","status":"passed","time":{"start":1725329804000,"stop":1725329804001,"duration":1}},{"uid":"9090e7b117d33d4","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/40//#testresult/9090e7b117d33d4","status":"passed","time":{"start":1725243564000,"stop":1725243564001,"duration":1}},{"uid":"ee4a58a9d8b5ff36","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/39//#testresult/ee4a58a9d8b5ff36","status":"passed","time":{"start":1725157887000,"stop":1725157887001,"duration":1}},{"uid":"462ee80ec564e8a3","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/38//#testresult/462ee80ec564e8a3","status":"passed","time":{"start":1725070583000,"stop":1725070583001,"duration":1}}]},"tags":[]},"source":"412b5f83b77192fb.json","parameterValues":[]}