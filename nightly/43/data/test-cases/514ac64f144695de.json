{"uid":"514ac64f144695de","name":"PUZZLE.01","historyId":"LOGIC:LOGIC#PUZZLE.01","time":{"start":1725502430000,"stop":1725502430001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.org/public/metta/./reports/BY_DATE/2024-09-05T01:49:02/tests/extended_compat/metta-examples/logic/puzzle.metta.html#LOGIC.PUZZLE.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let $r (foo $Employees) (if $r $Employees None)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (None None None None None (Cons (Cons ivan (Cons cashier (Cons no_sister Nil))) (Cons (Cons boris (Cons controller (Cons has_sister Nil))) (Cons (Cons semyon (Cons supervisor (Cons $_4850 Nil))) Nil))...","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (None None None None None None None None None None None None None None None None None None None None None None None None (Cons (Cons ivan (Cons cashier (Cons no_sister Nil))) (Cons (Cons boris (Cons c...","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"LOGIC"},{"name":"testClass","value":"LOGIC"},{"name":"package","value":"LOGIC"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"e9a70cbabb1c213e","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/42//#testresult/e9a70cbabb1c213e","status":"passed","time":{"start":1725416020000,"stop":1725416020001,"duration":1}},{"uid":"38a315f2a8fd0777","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/41//#testresult/38a315f2a8fd0777","status":"passed","time":{"start":1725329573000,"stop":1725329573001,"duration":1}},{"uid":"b8a6ea3eb791bd39","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/40//#testresult/b8a6ea3eb791bd39","status":"passed","time":{"start":1725243331000,"stop":1725243331001,"duration":1}},{"uid":"d8880b2b15184e36","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/39//#testresult/d8880b2b15184e36","status":"passed","time":{"start":1725157652000,"stop":1725157652001,"duration":1}},{"uid":"670e1c979166f5c3","reportUrl":"https://AdrickTench.github.io/metta-wam/nightly/38//#testresult/670e1c979166f5c3","status":"passed","time":{"start":1725070351000,"stop":1725070351001,"duration":1}}]},"tags":[]},"source":"514ac64f144695de.json","parameterValues":[]}